#computation of DFT 
clc; clear all; close all; 
  
%program for computation of DFT of a sequence by expansion method suptitle('computation of DFT-22BEC109’) 
x=input('Enter the sequence'); N=length(x) n=[0:1:N-1] k=[0:1:N-1] WN=exp(-j*2*pi/N); nk=n'*k; WNnk=WN.^nk; X=x*WNnk; 
disp('The DFT of the input sequence is X(K)'); disp(X) M=abs(X); 
disp('The magnitude of the DFT sequence is |X(K)|='); disp(M) subplot(2,2,1); stem(M,'g'); xlabel('K'); ylabel('X(K)/'); title('Magnitude spectrum using direct method'); ph=angle(X); 
disp('The phase of the DFT sequence is <X(K)='); disp(ph) subplot(2,2,2); stem(ph,'b'); xlabel('K'); ylabel('<X(K)'); title('phase spectrum using direct method'); 
  
%program for computation of DFT using FFT algorithm X1=fft(x);4 
disp('The DFT of the input sequence using FFT algorithm is X(K)='); disp(X1) M1=abs(X1); 
disp('The magnitude of the DFT sequence using FFT algorithm is X(K)|='); disp(M1) subplot(2,2,3); stem(M1,'c'); xlabel('K'); ylabel('|X(K)|'); title('Magnitude spectrum using FFT algorithm'); ph1=angle(X); 
disp('The phase of the DFT sequence is using FFT algorithm <X(K)='); disp(ph1) subplot(2,2,4); stem(ph1,'m'); xlabel('K'); ylabel('<X(K)'); title('phase spectrum using FFT algorithm'); 
  
  
  
  
 #linear convolution 
clc; clear all; close all; 
Suptitle('implementation of linear convolution-22BEC109’) 
%program for the linear convolution using DFT and IDFT x=input('Enter the input sequence'); N1=length(x) h=input('Enter the impuse response'); N2=length(h) subplot(2,2,1); stem(x,'c'); xlabel('n'); ylabel('x(n)'); title('input sequence'); subplot(2,2,2); stem(h,'g'); xlabel('n'); ylabel('h(n)'); title('impulse response'); N=N1+N2-1 x1=[x zeros(1,N-N1)] h1=[h zeros(1,N-N2)] 
X=fft(x1) 
H=fft(h1) Y=X.*H y=ifft(Y); 
disp('The linear convoluted output using DFT and IDFT is y(n) ') disp(y) subplot(2,2,3); stem(y,'r'); xlabel('n'); ylabel('y(n)'); title('output sequence obtained using DFT and IDFT'); %program for linear convolution using inbuilt function y1=conv(x,h); 
disp('The linear convoluted output using inbuilt function is y(n)') disp(y1) subplot(2,2,4); stem(y1,'m'); xlabel('n'); ylabel('y(n)'); title('output sequence obtained using inbuilt function'); 
 
 
 
#IDFT 
clc; clear all; close all; 
%program for computation of IDFT by expansion method suptitle('IDFT-22BEC109’) 
X=input('Enter the DFT sequence');
 N=length(X); n=[0:1:N-1]; k=[0:1:N-1]; 
WN=exp(1i*2*pi/N); nk=n'*k; WNnk=WN.^nk; x=(X*WNnk)/N; 
disp('The input sequence is x(n)='); disp(x) M=abs(x); 
disp('The magnitude of the sequence is x(n)='); disp(M) subplot(2,2,1); stem(M,'g'); xlabel('n'); ylabel('|x(n)]'); title('Magnitude spectrum'); ph=angle(x); 
disp('The phase of the sequence is <x(n)='); disp(ph) subplot(2,2,2); stem(ph,'b'); xlabel('n'); ylabel('<x(n)'); title('phase spectrum'); 
%program for computation of IDFT using IFFT alforithm x1=ifft(X); 
disp('The input sequence obtained using IFFT algorithm is x(n)='); disp(x1) M=abs(x1); 
disp('The magnitude of the sequence is x(n)='); disp(M) subplot(2,2,3); stem(M,'c'); xlabel('n'); ylabel('x(n)]'); title('Magnitude spectrum'); ph2=angle(x1); 
disp('The phase of the sequence is <x(n)='); disp(ph2) subplot(2,2,4); stem(ph,'m'); xlabel('n'); ylabel('<x(n)'); title('phase spectrum') 
 
#circular conv 
clc; clear all;
suptitle('implementation of circular convolution-22BEC109’) 
%program for the Circular convolution using DFT and IDFT x=input('Enter the input sequence'); N1=length(x) h=input('Enter the impuse response'); N2=length(h) subplot(2,2,1); stem(x,'b'); xlabel('n'); ylabel('x(n)'); title('input sequence'); subplot(2,2,2); 
stem(h,'r') xlabel('n'); ylabel('h(n)') 
title('impulse response'); N=max(N1,N2) x1=[x zeros(1,N-N1)] h1=[h zeros(1,N-N2)] 
X=fft(x1) 
H=fft(h1) Y=X.*H y=ifft(Y); 
disp('The circular convoluted output using DFT and IDFT is y(n)') disp(y) subplot(2,2,3); stem(y,'g'); xlabel('n'); ylabel('y(n)'); title('output sequence obtained using DFT and IDFT'); %program for circular convolution using inbuilt function y1=cconv(x,h,N); 
disp('The cicular convoluted output using inbuilt function is y(n)') subplot(2,2,4); stem(y1,'g') xlabel('n'); ylabel('y(n)'); title('output sequence obtained using DFT and IDFT'); 
 
 
 
 
 
 
 
 
 
 
